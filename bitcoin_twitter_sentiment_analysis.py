# -*- coding: utf-8 -*-
"""Bitcoin_Twitter_Sentiment_Analysis

Automatically generated by Colaboratory.
"""

# Description: This program gets the sentiment of Bitcoin from Twtter users

# Install dependencies
! pip install -U snscrape

# Import the Libraries
import snscrape.modules.twitter as sntwitter
from textblob import TextBlob
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
plt.style.use("fivethirtyeight")

query = 'bitcoin'
tweets = []
limit = 5000

for tweet in sntwitter.TwitterSearchScraper(query).get_items():
  #print(tweet, type(tweet))
  #print(vars(tweet))
  #break
  if len(tweets) == limit:
    #print(vars(tweet))
    break
  tweets.append([tweet.date, tweet.username, tweet.content])

df = pd.DataFrame(tweets, columns=['Date', 'User', 'Text'])

df

#Create a function to clean the tweets
def cleanTwt(twt):
  twt = re.sub('#bitcoin', 'bitcoin', twt) # Removes the # from bitcoin
  twt = re.sub('#Bitcoin', 'Bitcoin', twt) # Removes the # from Bitcoin
  twt = re.sub('#[A-Za-z0-9]+', '', twt) # Removes any strings with a '#'
  twt = re.sub('\\n', '', twt) # Removes the '\n' chars
  twt = re.sub('http?:\/\/\S+', '', twt) # Removes any hyperlinks
  return twt

#Clean the tweets
df['Cleaned_Tweets'] = df['Text'].apply(cleanTwt)
#Show the dataset
df.head()

#Create a function to get the subjectivity
def getSubjectivity(twt):
  return TextBlob(twt).sentiment.subjectivity
#Create a function to get polarity
def getPolarity(twt):
  return TextBlob(twt).sentiment.polarity

#Create two new columns called 'Subjectivity' & 'Polarity'
df['Subjectivity'] = df['Cleaned_Tweets'].apply(getSubjectivity)
df['Polarity'] = df['Cleaned_Tweets'].apply(getPolarity)

#Shwo the data
df.head()

#Create a function to get the text sentiment
def getSentiment(score):
  if score < 0:
    return 'Negative'
  if score == 0:
    return 'Neutral'
  return 'Positive'

#Create the column to store the text sentiment
df['Sentiment'] = df['Polarity'].apply(getSentiment)
#Show the data
df.head()

df.shape[0]

#Create a scetter plot to show the subjectivity and polarity
plt.figure(figsize=(8,6))
for i in range(0, df.shape[0]):
  plt.scatter(df['Polarity'][i], df['Subjectivity'][i], color='Purple')
plt.title('Sentiment Analysis Scatter Plot')
plt.xlabel('Polarity')
plt.ylabel('Subjectivity (objective -> subjective)')
plt.show()

#Create a bar chart to show the count of Positive, Neutral, and Negative sentiments
df['Sentiment'].value_counts().plot(kind='bar')
plt.title('Sentiment Analysis Bar Plot')
plt.xlabel('Sentiment')
plt.ylabel('Number of Tweets')
plt.show()
